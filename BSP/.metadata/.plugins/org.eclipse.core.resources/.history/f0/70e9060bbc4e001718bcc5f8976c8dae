//*****************************************************************************
// ADCF connect with interrupt


#include <stdbool.h>
#include <stdint.h>
#include "inc/hw_memmap.h"
#include "driverlib/adc.h"
#include "driverlib/gpio.h"
#include "driverlib/pin_map.h"
#include "driverlib/sysctl.h"
#include "driverlib/uart.h"
#include "utils/uartstdio.h"

//*****************************************************************************

//! This example shows how to setup ADC0 to read the internal temperature
//! sensor.
//! - UART0 peripheral
//! - GPIO Port A peripheral (for UART0 pins)
//! - UART0RX - PA0
//! - UART0TX - PA1
//!

void initConsole(void);
void initTempSensor(void);

void main(){
    SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|
                           SYSCTL_OSC_MAIN);  // Setup system clock at 40MHz from PLL with Crystal

    initConsole();

    while(1){

    }
}

void initConsole(){
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
        SysCtlDelay(3); //Just to be sure that the peripherals were enabled

        SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
        SysCtlDelay(3); //Just to be sure that the peripherals were enabled

        //Configure Pins for UART functionality
        GPIOPinConfigure(GPIO_PA0_U0RX);
        GPIOPinConfigure(GPIO_PA1_U0TX);
        GPIOPinTypeUART(GPIO_PORTA_BASE,GPIO_PIN_0|GPIO_PIN_1);

        // Configure UART clock and Baud rate
        UARTClockSourceSet(UART0_BASE, UART_CLOCK_PIOSC); //Precision internal clock
        UARTStdioConfig(0, 115200, 16000000); // UART Module 0, Baud Rate 115200 and System clock 16MHZ

        UARTprintf("\n System Startup!\n");
}


void initTempSensor(){

}

